// #ifndef and #define are known as header guards. Their primary purpose is to prevent C++ header files from being included multiple times.
#ifndef __HEADERS__
#define __HEADERS__

#include "codex/enum.p4"
#include "codex/l2.p4"
#include "codex/l3.p4"
#include "codex/l4.p4"
#include "codex/l567.p4"

#define CPU_PORT 255

// A packet_in is defined as a data plane packet that is sent by the P4Runtime server to the control plane for further inspection. 
@controller_header("packet_in")
header packet_in_header_t{
    bit<16> algo_indicator;
    bit<32> src_ip;
    bit<32> dst_ip;
    bit<16> src_port;
    bit<16> dst_port;
    bit<8> proto;
    bit<32> count;
    bit<16> class;
	bit<16> ingress_port;
}

// Similarly, a packet_out is defined as a data packet generated by the control plane and injected in the data plane via the P4Runtime server.
@controller_header("packet_out")
header packet_out_header_t{
	bit<16> egress_port;
	bit<16> mcast_grp;
}

// header struct for packet
struct headers_t{
	packet_out_header_t packet_out;
	packet_in_header_t packet_in;
	ethernet_t ethernet;
	ipv4_t ipv4;
	tcp_t tcp;
	udp_t udp;
}

// metadata inside switch pipeline
struct metadata_t{
	bit<32> src_ip;
    bit<32> dst_ip;
    bit<16> src_port;
    bit<16> dst_port;
    bit<8> proto;
    bit<16> class;
    bit<32> count;
    bit<1> overflow_flag_1;
    bit<1> overflow_flag_2;
    bit<1> l3_admit;
}

// tracking_metadata temporary storage for internal computation in switches
struct tracking_metadata_t{
    // Current table credentials
    bit<104> mKeyInTable;
    bit<32> mSIpInTable;
    bit<32> mDIpInTable;
    bit<16> mSPortInTable;
    bit<16> mDPortInTable;
    bit<8> mProtoInTable;
    bit<32> mCountInTable;

    bit<32> mIndex; // Calculate Hash Value for Flow ID(5-tuple)
    bit<1> mValid;

    // Previous table credentials
    bit<104> mKeyCarried;
    bit<32> mSIpCarried;
    bit<32> mDIpCarried;
    bit<16> mSPortCarried;
    bit<16> mDPortCarried;
    bit<8> mProtoCarried;
    bit<32> mCountCarried;

    bit<104> mSwapSpace; // As per my understanding compare previous table Key to current table Key
}

#endif